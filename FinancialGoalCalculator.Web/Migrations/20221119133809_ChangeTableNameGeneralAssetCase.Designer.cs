// <auto-generated />
using System;
using FinancialGoalCalculator.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialGoalCalculator.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221119133809_ChangeTableNameGeneralAssetCase")]
    partial class ChangeTableNameGeneralAssetCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Closed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OpenedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Accounts.LoanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OriginalBalance")
                        .HasColumnType("TEXT");

                    b.Property<int>("Periods")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("LoanDetail");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Balance");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Cases.GeneralAssetCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("GrowthRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Payment")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentInterval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("GeneralAssetCase");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Cases.LoanRepaymentCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExtraPayment")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentInterval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("LoanRepaymentCase");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.JobSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaychecksPerYear")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SalaryPerYear")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobSalary");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Scenario");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Accounts.LoanDetail", b =>
                {
                    b.HasOne("FinancialGoalCalculator.Web.Entities.Accounts.Account", "Account")
                        .WithOne("LoanDetail")
                        .HasForeignKey("FinancialGoalCalculator.Web.Entities.Accounts.LoanDetail", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Balance", b =>
                {
                    b.HasOne("FinancialGoalCalculator.Web.Entities.Accounts.Account", "Account")
                        .WithMany("Balances")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Cases.GeneralAssetCase", b =>
                {
                    b.HasOne("FinancialGoalCalculator.Web.Entities.Accounts.Account", "Account")
                        .WithMany("RealEstateAssetCases")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialGoalCalculator.Web.Entities.Scenario", "Scenario")
                        .WithMany("RealEstateAssetCases")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Cases.LoanRepaymentCase", b =>
                {
                    b.HasOne("FinancialGoalCalculator.Web.Entities.Accounts.Account", "Account")
                        .WithMany("LoanRepaymentCases")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialGoalCalculator.Web.Entities.Scenario", "Scenario")
                        .WithMany("LoanRepaymentCases")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.JobSalary", b =>
                {
                    b.HasOne("FinancialGoalCalculator.Web.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Accounts.Account", b =>
                {
                    b.Navigation("Balances");

                    b.Navigation("LoanDetail");

                    b.Navigation("LoanRepaymentCases");

                    b.Navigation("RealEstateAssetCases");
                });

            modelBuilder.Entity("FinancialGoalCalculator.Web.Entities.Scenario", b =>
                {
                    b.Navigation("LoanRepaymentCases");

                    b.Navigation("RealEstateAssetCases");
                });
#pragma warning restore 612, 618
        }
    }
}
